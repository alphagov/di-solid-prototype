name: Solid POC and build and deploy

on:
  workflow_dispatch:

env:
  AWS_REGION: eu-west-2
  ECR_REPOSITORY: solid-prototype-app
  GITHUB_SESSION_NAME: SolidPOCDeploySession
  IMAGE_TAG: ${{ github.sha }}
  CF_STACK_NAME: prototype-app
  CF_TEMPLATE_PATH: infrastructure/prototype-app/template.yaml

jobs:
  deploy:
    name: Deploy POC app to Fargate
    environment: build
    runs-on: ubuntu-latest
    timeout-minutes: 60
    permissions:
      id-token: write
      contents: read
    steps:
      - name: Checkout
        uses: actions/checkout@v3

      - name: Set up SAM cli
        uses: aws-actions/setup-sam@v1

      - name: Assume AWS role
        uses: aws-actions/configure-aws-credentials@v1
        with:
          aws-region: ${{ env.AWS_REGION }}
          role-to-assume: ${{ secrets.GH_ACTIONS_ROLE_ARN }}
          role-session-name: ${{ env.GITHUB_SESSION_NAME }}

      - name: Login to Amazon ECR
        id: login-ecr
        uses: aws-actions/amazon-ecr-login@v1

      - name: Build, tag, and push image to Amazon ECR
        id: build-image
        env:
          ECR_REGISTRY: ${{ steps.login-ecr.outputs.registry }}
        run: |
          # Build a docker container and
          # push it to ECR so that it can
          # be deployed to ECS.
          docker build -t $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG .
          docker push $ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG
          echo "::set-output name=image::$ECR_REGISTRY/$ECR_REPOSITORY:$IMAGE_TAG"

      - name: Deploy to AWS CloudFormation
        uses: aws-actions/aws-cloudformation-github-deploy@v1
        with:
          name: $CF_STACK_NAME
          template: $CF_TEMPLATE_PATH
          parameter-overrides: "ParameterKey=ImageTag,ParameterValue=$IMAGE_TAG --confirm-changeset"
